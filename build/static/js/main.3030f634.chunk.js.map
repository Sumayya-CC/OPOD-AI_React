{"version":3,"sources":["Components/tarentologo.png","Components/Report.js","Components/Upload.js","Components/Summary.js","Components/SelectText.js","Components/Api.js","Components/TrainingData.js","Components/TabSelect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","highlighted","Upload","props","state","selectedFile","open","files","this","setState","console","log","style","marginTop","width","height","background","onSave","handleSave","bind","acceptedFiles","showPreviews","maxFileSize","showPreviewsInDropzone","showFileNames","onClose","handleClose","filesLimit","dropzoneText","dictDefaultMessage","onClick","handleOpen","backgroundColor","color","textTransform","float","marginRight","marginLeft","Component","Summary","handleChange","panel","event","isExpanded","expanded","exp","React","createRef","classes","align","display","exportComponentAsPDF","minHeight","borderWidth","borderColor","borderStyle","overflow","ref","fontFamily","fontSize","data","overall_text_classification","classification","probability","toFixed","possible_profane_word_count","List","possible_profanity","map","listData","i","Accordion","key","onChange","square","elevation","border","AccordionSummary","className","expandIcon","aria-controls","id","marginBottom","ListItemText","paddingLeft","wordCount","pages","page","j","AccordionDetails","toPage","Tooltip","title","arrow","list","textAlign","paddingRight","pageWordCount","withStyles","theme","SelectedText","handleSelect","category","target","value","handleRange","offRange","addTrainingData","preventDefault","addTraining","onSubmit","IconButton","closeTraining","TextField","selected_text","multiline","rowsmin","variant","required","InputLabelProps","changeSelect","FormControl","component","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","flexdirection","formControl","InputLabel","Select","labelId","MenuItem","Button","type","margin","spacing","selectEmpty","Add_Training","createMuiTheme","overrides","MuiIconButton","root","Report","onHandleChange","inputText","disable","alert","axios","method","url","headers","text","then","res","line_analysis","text_tagged","classColor","colorOvl","lines","split","filter","line","test","report","firstLine","pagination","wordCounting","totalPages","length","wordPage","lineColor","summary","offensive","not_offensive","concat","document","getElementById","k","reduce","prev","current","scrollHeight","offsetHeight","innerHTML","p","last","a","b","u","colorCode","highlight","bg","values","c","arr","includes","textDecorationLine","textDecorationColor","words","paging","prevPage","currentPage","nextPage","handleMouseUp","window","getSelection","toString","match","select","post","JSON","stringify","API","message","summary1","prevB","nextB","disabled","placement","tooltip","whiteSpace","onMouseUp","rows","fullWidth","textField","borderBottomColor","TrainingData","getData","get","response","payload","trData","edData","textCount","catg","ct","index","inx","splice","edit","ex","Offensive","categorySelect","hide","catData","ix","indx","noEditing","onEditText","editSelect","cancel","ListItem","primary","flexDirection","onMouseOver","onMouseOut","e","size","maxWidth","nested","TabPanel","children","other","role","hidden","aria-labelledby","a11yProps","AntTabs","borderBottom","indicator","Tabs","AntTab","minWidth","fontWeight","typography","fontWeightRegular","join","opacity","fontWeightMedium","selected","Tab","disableRipple","useStyles","makeStyles","flexGrow","padding","TabSelect","useState","setValue","useTheme","alt","src","logo","newValue","Typography","axis","direction","onChangeIndex","App","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3030f634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tarentologo.d0a152fe.png\";","import React, { Component } from 'react';\r\nimport './Style.css';\r\nimport axios from 'axios';\r\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Upload from './Upload';\r\nimport Summary from './Summary';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport SelectedText from './SelectText';\r\nimport * as API from './Api'\r\n\r\n\r\nconst styles = () => ({\r\n  textField: {\r\n    width: '95%',\r\n    height: '60%',\r\n    marginTop: \"1%\",\r\n    paddingLeft: '1%',\r\n    color: \"black\",\r\n    background: '#FFFFFF',\r\n    borderWidth: 1,\r\n    borderColor: '#E2E2E2',\r\n    borderStyle: 'solid',\r\n\r\n    '& label.Mui-focused': {\r\n      color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#FFFFFF',\r\n    },\r\n    '& .MuiInput-underline:before': {\r\n      borderBottomColor: '#FFFFFF',\r\n    },\r\n\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: '#FFFFFF',\r\n    },\r\n    '&& .MuiInput-root:hover::before': {\r\n      borderColor: '#FFFFFF',\r\n    },\r\n    '& .MuiInputLabel-root': {\r\n      marginTop: '15%',\r\n      marginLeft: \"35%\"\r\n    },\r\n    '& .MuiInputLabel-shrink': {\r\n      color: 'white',\r\n    },\r\n  },\r\n\r\n  tooltip: {\r\n    '.MuiTooltip-tooltip': {\r\n      fontSize: 30,\r\n    }\r\n  },\r\n\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiIconButton: {\r\n      root: {\r\n        '&:hover': {\r\n          backgroundColor: \"$labelcolor\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nvar highlighted;\r\n\r\nclass Report extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputText: '',\r\n      selectedFile: null,\r\n      report: false,\r\n      disable: false,\r\n      Summary: false,\r\n      data: '',\r\n      line_analysis: [],\r\n      lines: [],\r\n      firstLine: [],\r\n      classification: '',\r\n      probability: 0,\r\n      possible_profanity: [],\r\n      text_tagged: '',\r\n      classColor: '',\r\n      currentPage: 1,\r\n      totalPages: 1,\r\n      wordCount: [],\r\n      pageWordCount: [],\r\n      pages: [],\r\n      offensive: [{ 'color': '#B00C0C', 'value': 'Above 80%' },         //color code\r\n      { 'color': '#E61717', 'value': '50% to 80%' },\r\n      { 'color': '#E66D17', 'value': 'Below 50%' },],\r\n      not_offensive: [{ 'color': '#19AE48', 'value': 'Below 50%' },\r\n      { 'color': '#008944', 'value': '50% to 80%' },\r\n      { 'color': '#003B1D', 'value': 'Above 80%' },],\r\n      select: false,\r\n      selected_text: '',\r\n      offRange: '',\r\n      category: '',\r\n\r\n    }\r\n  }\r\n\r\n  // resize = () => {                                                      //function on resize\r\n  //   console.log('resize')\r\n  //   if (this.state.report) {\r\n  //     var page = document.getElementById(\"highlight\");\r\n  //   // }\r\n  // }\r\n\r\n  // componentDidMount() {                                                 //check window resize\r\n  //   window.addEventListener('resize', this.resize)\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener('resize', this.resize)\r\n  // }\r\n\r\n  onHandleChange = event => {\r\n    this.setState({ inputText: event.target.value })                    //input text value\r\n  }\r\n\r\n\r\n  onSubmit = event => {                                                 //check profanity\r\n    event.preventDefault();\r\n    this.setState({ disable: true })                                    //disabling button\r\n    if (this.state.inputText === '') {                                  //empty uploaded file\r\n      console.log('No text available for analysis')\r\n      alert('Please upload the text file');\r\n    }\r\n    else {\r\n      axios({                                                           //check profanity API Call\r\n        method: 'post',\r\n        url: API.Check_Profanity,\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data: { text: this.state.inputText, }                           // This is the body part\r\n      })\r\n        .then(res => (res.data))\r\n        .then((data) => {\r\n          this.setState({ data: data });                                //for passing to Summary.js\r\n          this.setState({ line_analysis: data.line_analysis })\r\n          this.setState({ classification: data.overall_text_classification.classification })\r\n          this.setState({ probability: (data.overall_text_classification.probability * 100).toFixed(2) })   //Rounding the probability %\r\n          this.setState({ possible_profanity: data.possible_profanity, text_tagged: data.text_tagged })\r\n          this.setState({ classColor: this.colorOvl(this.state.classification, this.state.probability) });  //overall classification color\r\n          this.setState({\r\n            lines: this.state.text_tagged.split('.').filter(line => {   //converting text tagged into array of lines\r\n              return /\\S/.test(line);                                   //removing empty or whitespace lines from the array\r\n            })\r\n          })\r\n          this.setState({ report: true }, () => {                       //display report \r\n            this.setState({\r\n              firstLine: this.pagination(this.state.lines)              //dynamic pagination\r\n            }, () => {\r\n              this.setState({ wordCount: this.wordCounting(this.state.text_tagged, this.state.possible_profanity) })//total profane word count\r\n              this.setState({ totalPages: this.state.firstLine.length });//no. of total pages\r\n              this.setState({ pages: this.wordPage() })                  //page no.s of profane words\r\n              this.lineColor(1);                                         //report color coding and highlighting\r\n            })\r\n          });\r\n          this.setState({ summary: true });                              //display summary\r\n          console.log(data)\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  colorOvl = (classification, probability) => {       //overall profanity classification color coding\r\n    var color = '';\r\n    if (classification === 'Offensive') {             //offensive \r\n      if (probability > 80) {\r\n        color = this.state.offensive[0].color;\r\n      } else if (probability >= 50) {\r\n        color = this.state.offensive[1].color;\r\n      } else {\r\n        color = this.state.offensive[2].color;\r\n      }\r\n    } else {                                          //not offensive\r\n      if (probability > 80) {\r\n        color = this.state.not_offensive[2].color;\r\n      } else if (probability >= 50) {\r\n        color = this.state.not_offensive[1].color;\r\n      } else {\r\n        color = this.state.not_offensive[0].color;\r\n      }\r\n    }\r\n    return color;\r\n  }\r\n\r\n\r\n  pagination = (lines) => {                             //dynamic pagination\r\n    var arr, line, firstLine = [];\r\n    firstLine = firstLine.concat(0);                    //first page first line index (0)\r\n    var page = document.getElementById(\"highlight\");    //highlighted text displaying element\r\n    for (let k = 0; k < lines.length; k++) {            //removing profane word tagging from each line\r\n      arr = this.state.lines[k].split(/\\[(.*?)\\]\\(possible profanity\\)/);\r\n      line = arr.reduce((prev, current) => {            //splitted array into single line\r\n        return prev.concat(current);\r\n      }, [])\r\n      if (page.scrollHeight <= page.offsetHeight) {     //checking max line capacity of page\r\n        page.innerHTML += line + \".\";                   //add next line into the page\r\n      } else {                                          //if max capacity reach, then next page\r\n        k--;\r\n        firstLine = firstLine.concat(k);                //first line of next page\r\n        page.innerHTML = '';                            //clear for next page checking\r\n      }\r\n    }\r\n    page.innerHTML = '';                                //clearing page\r\n    page.style.height = 'unset';                        //after pagination removing page height\r\n    return firstLine;\r\n  }\r\n\r\n\r\n  lineColor = (p) => {\r\n    var lines, last, a;\r\n    var b = 'none';                                     //highlight color\r\n    var u = 'black';                                    //underline color\r\n    var wordCount = [];\r\n    for (var i = 0; i < this.state.possible_profanity.length; i++) {\r\n      wordCount = wordCount.concat(0);                  //initializing profane word count array\r\n    }\r\n\r\n    if (this.state.firstLine.length === p) {            //checking for last page\r\n      last = this.state.lines.length;                   //last line of text (index+1)\r\n    } else {\r\n      last = this.state.firstLine[p];                   //first line of next page\r\n    }\r\n\r\n    if (this.state.lines.length - 1) {                                    //multiline report\r\n      for (let k = this.state.firstLine[p - 1]; k < last; k++) {\r\n        u = this.colorCode(this.state.line_analysis[k].classification,\r\n          this.state.line_analysis[k].probability * 100, 0)               //color for underlines\r\n        b = this.colorCode(this.state.line_analysis[k].classification,\r\n          this.state.line_analysis[k].probability * 100, 1)               //background color\r\n        a = this.wordCounting(this.state.lines[k], this.state.possible_profanity);//wordcount for line\r\n        lines = <span>{lines}{this.highlight(this.state.lines[k] + '.',\r\n          this.state.possible_profanity, u, b)}</span>;                   //highlighted report, combining lines\r\n        for (let j = 0; j < this.state.possible_profanity.length; j++) {\r\n          wordCount[j] = wordCount[j] + a[j];                             //adding word counts\r\n        }\r\n      }\r\n    } else {                                                               //one line report\r\n      u = this.colorCode(this.state.classification, this.state.probability, 0)\r\n      b = this.colorCode(this.state.classification, this.state.probability, 1)\r\n      a = this.wordCounting(this.state.lines[0], this.state.possible_profanity);\r\n      lines = <span>{lines}{this.highlight(this.state.lines[0], this.state.possible_profanity, u, b)}</span>;\r\n      for (let j = 0; j < this.state.possible_profanity.length; j++) {\r\n        wordCount[j] = wordCount[j] + a[j];                                 //word count for one line text\r\n      }\r\n    }\r\n    this.setState({ pageWordCount: wordCount });\r\n    highlighted = lines;\r\n  }\r\n\r\n\r\n  colorCode = (classification, probability, bg) => {    //color code for lines\r\n    var color = '';\r\n    if (classification === 'Offensive') {               //offensive\r\n      if (probability > 80) {\r\n        if (bg) {                                       //background color\r\n          color = '#ffbaba'\r\n        } else {\r\n          color = this.state.offensive[0].color;        //underline color\r\n        }\r\n      } else if (probability >= 50) {\r\n        if (bg) {\r\n          color = '#ff9e6e';\r\n        } else {\r\n          color = this.state.offensive[1].color;\r\n        }\r\n      } else {\r\n        if (bg) {\r\n          color = '#ffdba4';\r\n        } else {\r\n          color = this.state.offensive[2].color;\r\n        }\r\n      }\r\n    } else {                                            //not offensive\r\n      if (bg) {\r\n        color = 'none';                                 //no background color\r\n      } else {\r\n        color = 'black';                                //black underline\r\n      }\r\n    }\r\n    return color;\r\n  }\r\n\r\n\r\n  highlight = (text, values, c, b) => {                 //Highlighter\r\n    if (!values.length)\r\n      return text;\r\n    var arr = text.split(/\\[(.*?)\\]\\(possible profanity\\)/)    // split into array by removing []+(possible profanity)\r\n    var line = (\r\n      <span style={{ backgroundColor: b }}>{/*highligt color wrt color code*/}\r\n        {arr.reduce((prev, current, i) => {\r\n          if (!i)\r\n            return [current];\r\n          return prev.concat(                           //combining splited array into one line\r\n            values.includes(current) ?                  //underlining profane words  \r\n              <span key={i + current} style={{\r\n                backgroundColor: b, textDecorationLine: 'underline',\r\n                textDecorationColor: c\r\n              }}>{current}</span>\r\n              : current\r\n          );\r\n        }, [])}\r\n      </span>);\r\n    return line;\r\n  }\r\n\r\n\r\n\r\n  wordCounting = (text, words) => {                           //profane word count\r\n    var arr = text.split(/\\[(.*?)\\]\\(possible profanity\\)/);  //seperate profane words and other text\r\n    var wordCount = [];\r\n    for (let i = 0; i < words.length; i++) {\r\n      wordCount = wordCount.concat(0);                        //initializing count array\r\n    }\r\n    for (let i = 0; i < arr.length; i++) {                    //in each text part\r\n      for (let j = 0; j < words.length; j++) {                //checking each profane word\r\n        if (arr[i] === words[j]) {\r\n          wordCount[j]++;\r\n        }\r\n      }\r\n    }\r\n    return wordCount;\r\n  }\r\n\r\n  wordPage = () => {                                          //page no.s of profane words\r\n    var arr, words = this.state.possible_profanity;\r\n    var pages = [];\r\n    var page;\r\n    for (let i = 0; i < words.length; i++) {\r\n      pages = pages.concat([[]]);                             //array of array of page no. of each profane words\r\n    }\r\n    function paging(k, firstLine) {                           //finding page no. of a line\r\n      for (let p = firstLine.length - 1; p >= 0; p--) {       //last to first page\r\n        if (firstLine[p] <= k) {\r\n          return p + 1;\r\n        }\r\n      }\r\n    }\r\n    for (let k = 0; k < this.state.lines.length; k++) {       //each line\r\n      arr = this.state.lines[k].split(/\\[(.*?)\\]\\(possible profanity\\)/); //seperate profane words\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0; j < words.length; j++) {\r\n          if (arr[i] === words[j]) {                          //checking seperated text with profane words\r\n            page = paging(k, this.state.firstLine);           //finding page no. of line\r\n            pages[j] = pages[j].concat(page)                  //add page no. into page no. of that word\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n\r\n  prevPage = () => {\r\n    var p = this.state.currentPage - 1;               //previous page no.\r\n    this.setState({ currentPage: p });\r\n    this.lineColor(p);                                //getting highligted previous page\r\n  }\r\n\r\n  nextPage = () => {\r\n    var p = this.state.currentPage + 1;               //next page no.\r\n    this.setState({ currentPage: p });\r\n    this.lineColor(p);                                //getting highligted next page\r\n  }\r\n\r\n  toPage = (p) => {\r\n    this.setState({ currentPage: p });\r\n    this.lineColor(p);                                //getting highligted page of seleted page no.\r\n  }\r\n\r\n\r\n  handleMouseUp = () => {\r\n    var text = window.getSelection().toString();      //get selected text\r\n    if (text.match(/^ *$/) == null) {                 //remove empty and whitespace selection\r\n      this.setState({ selected_text: text });\r\n      this.setState({ select: true });                //display SelectText\r\n    }\r\n  };\r\n\r\n  changeSelect = (event) => {                         //handling selected text\r\n    this.setState({ selected_text: event.target.value });\r\n  }\r\n\r\n  addTraining = (offRange, category) => {             //add training data into the database\r\n    this.setState({ offRange: offRange, category: category })\r\n    axios.post(API.Save_TrainingData, JSON.stringify({     //add training data mock API call\r\n      \"text\": this.state.selected_text,\r\n      \"category\": category,\r\n      \"offensive\": offRange\r\n    }),\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      })\r\n    axios.post(API.Add_Training, JSON.stringify({     //add training data API call\r\n      \"text\": this.state.selected_text,\r\n      \"category\": category,\r\n      \"offensive\": offRange\r\n    }),\r\n      { headers: { \"Content-Type\": \"application/json\" } })\r\n      .then(res => (res.data))\r\n      .then((data) => {\r\n        if (data.message === 'success') {\r\n          alert('Training data added')\r\n        } else {\r\n          alert('error adding data')\r\n        }\r\n      })\r\n    axios.post(API.Reload_TrainingData, JSON.stringify([{//reload training data\r\n      \"custom_profanity\": true,\r\n      \"model\": false\r\n    }]),\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      })\r\n    this.setState({ select: false })                  //hide SelectText \r\n  }\r\n\r\n  closeTraining = () => {                             //close SelectText \r\n    this.setState({ select: false })                  //hide SelectText \r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;                   // with styles classes\r\n    let summary1 = null;                              //summary or selected text\r\n    let text = null;                                  //input text field or highligted page\r\n    let prevB = null;                                 //previous button\r\n    let nextB = null;                                 //next button\r\n\r\n    if (this.state.currentPage === 1) {               //first page\r\n      prevB = (                                       //disable previous button\r\n        <Button className=\"navigate-left\" variant=\"outlined\"\r\n          style={{ width: '30px', height: '30px', background: \"#FFFFFF\", marginRight: '5%' }}\r\n          disabled>\r\n          <KeyboardArrowLeftIcon fontSize='large' />\r\n        </Button>\r\n      )\r\n    } else {\r\n      prevB = (\r\n        <Button className=\"navigate-left\" variant=\"outlined\"\r\n          style={{ width: '30px', height: '30px', background: \"#FFFFFF\", marginRight: '5%' }}\r\n          onClick={this.prevPage}>\r\n          <KeyboardArrowLeftIcon fontSize='large' />\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (this.state.currentPage < this.state.totalPages) {\r\n      nextB = (\r\n        <Button className=\"navigate-right\" variant=\"outlined\"\r\n          style={{ width: '30px', height: '30px', background: \"#FFFFFF\" }}\r\n          onClick={this.nextPage}>\r\n          <KeyboardArrowRightIcon fontSize='large' />\r\n        </Button>\r\n      )\r\n    } else {                                          //last page\r\n      nextB = (                                       //disable next button\r\n        <Button className=\"navigate-right\" variant=\"outlined\"\r\n          style={{ width: '30px', height: '30px', background: \"#FFFFFF\" }}\r\n          disabled>\r\n          <KeyboardArrowRightIcon fontSize='large' />\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (this.state.report) {          //after check profanity submission\r\n      text = (                        //Highlighted page\r\n        <div>\r\n          <div>\r\n            <b className=\"space\" style={{ float: 'left', marginTop: '-6%', marginLeft: '-5%' }}>\r\n              Profanity Detector\r\n                </b>\r\n            <Button variant=\"contained\" disabled style={{     //disabled button\r\n              border: 'none', width: '18%', height: 40, textTransform: 'none',\r\n              float: 'right', marginRight: '4%', marginTop: '-5%'\r\n            }}\r\n              type='submit'> Check Profanity </Button>\r\n            <div style={{\r\n              backgroundColor: \"none\", color: \"#000000\", width: '18%', height: 40,\r\n              textTransform: 'none', float: 'right', marginRight: '20%', marginTop: '-5%'\r\n            }}>\r\n              <PublishIcon style={{ marginLeft: \"0%\", color: \"black\", marginRight: '2%', }} />{/*disabled upload*/}\r\n                  Upload File\r\n                </div>\r\n          </div>\r\n\r\n          <div align='justify' style={{\r\n            minHeight: 450, width: '96%', marginTop: \"7%\",\r\n            background: '#FFFFFF', borderWidth: 1, borderColor: '#E2E2E2', borderStyle: 'solid',\r\n          }} >\r\n            <MuiThemeProvider theme={theme}>          {/*Tooltip for page*/}\r\n              <Tooltip title={\r\n                <span style={{ fontSize: '16px' }}>\r\n                  Select text for add to training data\r\n                </span>}\r\n                placement='top' arrow className={classes.tooltip}>\r\n                <div style={{\r\n                  whiteSpace: 'pre-wrap', marginTop: '1%', marginRight: '1%',\r\n                  marginLeft: '1%', marginBottom: '1%', background: '#ffffff',\r\n                  height: 435,\r\n                  overflow: 'unset',\r\n                }}\r\n                  onMouseUp={this.handleMouseUp} id='highlight'>{highlighted}</div>{/*highlighted page*/}\r\n              </Tooltip>\r\n            </MuiThemeProvider>\r\n          </div>\r\n\r\n          {/*paging*/}\r\n          <div className=\"pages\" style={{ float: 'right', marginRight: '7.5%' }}>\r\n            {prevB}\r\n\r\n            <span style={{\r\n              marginLeft: '5%', marginRight: '5%', marginTop: '-5%', paddingLeft: '2%',\r\n              paddingRight: '2%', display: 'inline-block', fontSize: '14px'\r\n            }}>\r\n              <pre>{this.state.currentPage} of {this.state.totalPages}</pre>\r\n            </span>\r\n\r\n            {nextB}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {                         //Before check profanity\r\n      text = (                       //input field for check profanity\r\n        <form onSubmit={this.onSubmit}>\r\n          <div>\r\n            <b className=\"space\" style={{ float: 'left', marginLeft: '-5%', }}>\r\n              Profanity Detector\r\n                </b>\r\n            <Button variant=\"contained\" color='primary' style={{\r\n              border: 'none',    //Submit button\r\n              width: '18%', height: 40, textTransform: 'none', float: 'right',\r\n              marginRight: '4%', marginTop: '1%',\r\n            }}\r\n              type='submit'> Check Profanity </Button>  {/*Check profanity submit button*/}\r\n            <Upload />            {/*upload file (incomplete)*/}\r\n          </div>\r\n\r\n          <TextField id='text field'      //inut text field\r\n            value={this.state.inputText}\r\n            onChange={this.onHandleChange}\r\n            label=\"Enter or paste your text here\"\r\n            multiline={true}\r\n            rows={22}\r\n            fullWidth={true}\r\n            required\r\n            InputLabelProps={{ required: false, }}\r\n            className={classes.textField}\r\n            style={{ height: 450 }}\r\n            disabled={this.state.disable} />  {/*disabling after submitting*/}\r\n        </form>\r\n      );\r\n    }\r\n\r\n    if (this.state.summary) {      //Display the summary after getting the profanity data\r\n      if (this.state.select) {     //display selected text\r\n        summary1 = (\r\n          <SelectedText selected_text={this.state.selected_text}\r\n            changeSelect={this.changeSelect} addTraining={this.addTraining}\r\n            closeTraining={this.closeTraining} />\r\n        );\r\n      }\r\n      else {                      //display profanity summary\r\n        summary1 = (\r\n          <Summary data={this.state.data} color={this.state.classColor}\r\n            pages={this.state.pages} wordCount={this.state.wordCount}\r\n            pageWordCount={this.state.pageWordCount} toPage={this.toPage} />\r\n        );\r\n\r\n      }\r\n    }\r\n    else {\r\n      summary1 = (                //Empty Summary before submit\r\n        <div>\r\n          <div style={{\r\n            color: 'black', align: \"center\", marginRight: '33%', marginTop: '-10%',\r\n            display: 'inline-flex', float: 'right'\r\n          }}>\r\n            <CloudDownloadIcon style={{ color: \"black\", marginRight: '5%', }} />  {/*disabled download*/}\r\n                  Export_Summary\r\n              </div>\r\n\r\n          <div style={{\r\n            backgroundColor: '#ffffff', height: 450, width: '90%',\r\n            borderWidth: 1, borderColor: '#E2E2E2', borderStyle: 'solid',\r\n          }}>\r\n            <div style={{ textAlign: 'center', color: '#D0D0D0', marginTop: '55%' }}>\r\n              Summary of the text\r\n                  <br />\r\n                  will appear here\r\n                </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div style={{ marginLeft: '5%', marginRight: '5%', marginTop: '1%', }}>\r\n        <div style={{ width: '75%', float: 'left' }}>               {/*input text field or highligted page*/}\r\n          {text}\r\n        </div>\r\n\r\n        <div style={{ width: '25%', float: 'left', }}>\r\n          <div style={{ marginLeft: '10%', marginTop: '20%', }}>    {/*summary or selected text*/}\r\n            {summary1}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Report);","import React, { Component } from 'react';\r\nimport './Style.css';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\n\r\n\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: '',\r\n      open: false,\r\n      files: []\r\n    };\r\n\r\n  }\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n\r\n  }\r\n\r\n  handleSave(files) {\r\n    //Saving files to state for further use and closing Modal.\r\n    this.setState({ files: files, open: false });\r\n    console.log('uploaded')\r\n    // this.props.onFileChange();\r\n\r\n  }\r\n\r\n\r\n  handleOpen() {\r\n    this.setState({ open: true, });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: '1%', }}>\r\n          <DropzoneDialog\r\n            style={{ width: '50%', height: '40%', background: '#0000FF' }}\r\n            open={this.state.open}\r\n            onSave={this.handleSave.bind(this)}\r\n            acceptedFiles={[\".txt\", \".pdf\"]}\r\n            showPreviews={false}\r\n            maxFileSize={500000000}\r\n            // showPreviews = {false}\r\n            showPreviewsInDropzone={true}\r\n            showFileNames={true}\r\n            onClose={this.handleClose.bind(this)}\r\n            filesLimit={1}\r\n            dropzoneText={\"Drag & drop the file here OR\"}\r\n            dictDefaultMessage={\"Upload PDF document\"}\r\n          />\r\n          <div onClick={this.handleOpen.bind(this)} style={{                //submit\r\n            backgroundColor: \"none\", color: \"#000000\", width: '18%', height: 40,\r\n            textTransform: 'none', float: 'right', marginRight: '-3%', marginTop: '1%'\r\n          }}>\r\n            <PublishIcon color='primary'\r\n              style={{ marginLeft: \"0%\", marginRight: '2%', marginTop: '2%' }} />\r\n              Upload File\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { exportComponentAsPDF } from \"react-component-export-image\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './Style.css';\r\n\r\nconst styles = (theme) => ({\r\n  list: {\r\n    borderStyle: 'hidden',\r\n    '&:hover': {\r\n      borderStyle: 'solid',\r\n      borderWidth: '1px'\r\n    }\r\n  },\r\n  expanded: {\r\n    // width: '100%',\r\n    border: 'none',\r\n    // '&$expanded': {\r\n    //     height:'5px'\r\n    //  }\r\n  },\r\n})\r\n\r\nclass Summary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n    }\r\n    this.exp = React.createRef();       //reference to download summary\r\n  }\r\n\r\n  handleChange = (panel) => (event, isExpanded) => {\r\n    this.setState({ expanded: isExpanded ? panel : false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;                     // with styles classes\r\n\r\n    return (\r\n      <div>\r\n        <div style={{\r\n          color: 'black', align: \"center\", marginTop: '-10%', marginRight: '33%',\r\n          display: 'inline-flex', float: 'right'\r\n        }}\r\n          onClick={() => exportComponentAsPDF(this.exp)}>                                            {/*download summary (incomplete)*/}\r\n          <CloudDownloadIcon color='primary' style={{ marginLeft: \"0%\", marginRight: '5%' }} />\r\n                Export_Summary\r\n          </div>\r\n\r\n        <div style={{\r\n          marginTop: '22%', backgroundColor: '#ffffff', minHeight: 450, width: '90%',\r\n          borderWidth: 1, borderColor: '#E2E2E2', borderStyle: 'solid', marginRight: '30%', overflow: 'unset'\r\n        }} ref={this.exp}>                                                                            {/*this will be downloaded*/}\r\n          <div style={{ marginLeft: '4%', marginTop: '3%', fontFamily: \"roboto\", fontSize: 15, }}>\r\n\r\n            <b>Overall Profanity : </b>\r\n            <span style={{ color: this.props.color }}>                                                {/*classsification with color code*/}\r\n              {this.props.data.overall_text_classification.classification} :\r\n              {(this.props.data.overall_text_classification.probability * 100).toFixed(2)}%\r\n              </span>\r\n            <br />\r\n            <b>Profane Word Count : {this.props.data.possible_profane_word_count}</b>\r\n            <br /><br />\r\n\r\n                Offensive| Occurances\r\n              <List style={{ marginLeft: '2%', width: '90%', }}>\r\n              {this.props.data.possible_profanity.map((listData, i) => (                              //Mapping all the profane words\r\n                <Accordion expanded={this.state.expanded === 'panel' + i} key={i}\r\n                  onChange={this.handleChange('panel' + i)} square={true} elevation={0} style={{ border: 'none', }}>\r\n                  <AccordionSummary className={classes.expanded} key={i}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\" style={{ backgroundColor: '#F2F2F2', marginBottom: '2%' }}>\r\n                    <ListItemText key={i} style={{ backgroundColor: '#F2F2F2', paddingLeft: '2%' }}>\r\n                      {listData} ({this.props.wordCount[i]})                                          {/*displaying profane words with count*/}\r\n                    <FiberManualRecordIcon fontSize='small' key={i} style={{ float: 'right', color: \"#EC0000\", }} />\r\n                    </ListItemText>\r\n                  </AccordionSummary>\r\n                  {this.props.pages[i].map((page, j) => (                                             //mapping all the profane words pages\r\n                    <AccordionDetails onClick={() => this.props.toPage(page)} key={i + '=' + j}>      {/*on expansion displaying page no.*/}\r\n                      <Tooltip title={\"Go to page \" + page} arrow>                                    \r\n                        <button key={i + '-' + j} id={i + ' ' + j} className={classes.list}\r\n                          style={{\r\n                            backgroundColor: '#E2E2E2', paddingLeft: '1%', width: '120%', textAlign: 'start',\r\n                            marginLeft: '-8%', marginTop: '-4%', marginRight: '-8%', marginBottom: '-7%',\r\n                          }}>\r\n                          <span style={{ marginLeft: '8%' }}> Page {page}</span>\r\n                        </button>\r\n                      </Tooltip>\r\n                    </AccordionDetails>))}\r\n                </Accordion>))}\r\n            </List>\r\n            <br />\r\n\r\n            <b>On this page: </b>\r\n            <br />\r\n                Offensive| Occurances\r\n              <br />\r\n            {/* No Occurance */}\r\n            <List style={{ marginLeft: '2%', width: '90%', }}>\r\n              {this.props.data.possible_profanity.map((listData, i) => (                             //mapping all the profane words on this page\r\n                <ListItemText key={i} style={{ backgroundColor: '#F2F2F2', paddingLeft: '5%', paddingRight: '5%' }}>\r\n                  {listData} ({this.props.pageWordCount[i]})\r\n                  <FiberManualRecordIcon fontSize='small' style={{ float: 'right', color: '#EC0000', }} />\r\n                </ListItemText>))}\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Summary);","import React, { Component } from 'react';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './Style.css';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '90%',\r\n        color: '#F5F5F5',\r\n        height: '10%',\r\n        marginLeft: '5%'\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n});\r\n\r\n\r\nclass SelectedText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: '',\r\n            offRange: \"Offensive\",\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleSelect = event => {                                           //text handling\r\n        this.setState({ category: event.target.value })\r\n    }\r\n\r\n    handleRange = event => {                                            //offensive range selection\r\n        this.setState({ offRange: event.target.value })\r\n    }\r\n\r\n    addTrainingData = event => {                                       //add training data (function in Report.js)\r\n        event.preventDefault();\r\n        this.props.addTraining(this.state.offRange, this.state.category);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;                     // with styles classes\r\n\r\n        return (\r\n            <div align='justify'>\r\n                <div style={{\r\n                    color: 'black', align: \"center\", marginTop: '-10%',\r\n                    marginRight: '33%', display: 'inline-flex', float: 'right'\r\n                }}>\r\n                    <CloudDownloadIcon style={{ marginLeft: \"0%\", color: \"black\", marginRight: '5%' }} />\r\n                  Export_Summary\r\n              </div>\r\n\r\n                <div style={{\r\n                    marginTop: '22%', backgroundColor: '#ffffff', minHeight: 450, width: '90%', overflow: 'unset',\r\n                    borderWidth: 1, borderColor: '#E2E2E2', borderStyle: 'solid', marginRight: '30%'\r\n                }}>\r\n\r\n                    <form onSubmit={this.addTrainingData}>\r\n                        <div style={{ textAlign: 'center', color: '#D0D0D0', }}>\r\n                            <h4 style={{ float: 'left', color: '#000000', marginTop: '3%', marginLeft: '3%' }}>\r\n                                Selected text\r\n                            </h4>\r\n                            <IconButton className={\"MyCustomButton\"} style={{ float: 'right' }}                         //close\r\n                                onClick={this.props.closeTraining}>\r\n                                <CloseIcon color='primary' />\r\n                            </IconButton>\r\n                            <TextField id=\"outlined-basic\" value={this.props.selected_text} multiline\r\n                                rowsmin={2} variant=\"outlined\" required InputLabelProps={{ required: false, }}          //text\r\n                                style={{ width: '90%', marginTop: '-3%', marginBottom: '3%', }}\r\n                                onChange={this.props.changeSelect} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h4 style={{ color: '#000000', marginTop: '3%', marginLeft: '3%', marginBottom: '-1%' }}>\r\n                                Offensive Range\r\n                                </h4>\r\n                            <div style={{ marginTop: '1%', marginLeft: '5%', width: '100%', }}>                         {/*offensive range*/}\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup aria-label=\"Offensiveness\" name=\"Offensiveness\"\r\n                                        value={this.state.offRange} onChange={this.handleRange}>\r\n                                        <div>\r\n                                            <FormControlLabel value=\"Lightly Offensive\"\r\n                                                control={<Radio color='primary' />} label='Lightly Offensive' />\r\n                                            <FiberManualRecordIcon\r\n                                                style={{ color: '#E77100', float: \"right\", flexdirection: \"coloumn\" }} />{/*offensive color*/}\r\n                                        </div>\r\n                                        <div>\r\n                                            <FormControlLabel value=\"Offensive\"\r\n                                                control={<Radio color='primary' />} label=\"Offensive\" />\r\n                                            <FiberManualRecordIcon\r\n                                                style={{ color: '#EC0000', flexdirection: \"coloumn\", float: \"right\" }} />\r\n                                        </div>\r\n                                        <div>\r\n                                            <FormControlLabel value=\"Extremely Offensive\"\r\n                                                control={<Radio color='primary' />} label=\"Extremely Offensive\" />\r\n                                            <FiberManualRecordIcon\r\n                                                style={{ color: '#AA0000', flexdirection: \"coloumn\", float: 'right' }} />\r\n                                        </div>\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <FormControl className={classes.formControl} variant=\"filled\">                              {/*category selection*/}\r\n                                <InputLabel id=\"demo-simple-select-label\">Select Category</InputLabel>\r\n                                <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" required\r\n                                    value={this.state.category} onChange={this.handleSelect}>\r\n                                    <MenuItem value={'Unparlimentary words'}>Unparlimentary words</MenuItem>\r\n                                    <MenuItem value={'Culturally Sensitive'}>Culturally Sensitive</MenuItem>\r\n                                    <MenuItem value={'Politically Sensitive'}>Politically Sensitive</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Button variant='outlined' color='primary' type='submit'\r\n                                style={{ textTransform: 'none', marginLeft: '5%', width: '90%' }} >                     {/*Submit button*/}\r\n                                Add to Training Data\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SelectedText);","export const Check_Profanity='http://52.173.240.27:4001/checkProfanity';\r\nexport const Fetch_TrainingData='http://52.173.240.27:4001/fetchTrainingData';\r\nexport const Save_TrainingData='http://52.173.240.27:4001/saveTrainingData';\r\nexport const Reload_TrainingData='http://52.173.240.27:4001/reloadTrainingData';\r\n// export const Delete_TrainingData='http://52.173.240.27:4001/deleteTrainingData';\r\nexport const Add_Training='https://5fbcb65e3f8f90001638c2b6.mockapi.io/profanity/addTraining';//mock api","import React, { Component } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './Style.css';\r\nimport axios from 'axios';\r\nimport * as API from './Api'\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: \"#F7F8F8\",\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n        color: 'white',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        color: \"black\",\r\n        background: '#FFFFFF',\r\n        borderWidth: 1,\r\n        borderColor: '#0074B6',\r\n        borderStyle: 'solid',\r\n        '& label.Mui-focused': {\r\n            color: '#0074B6',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#FFFFFF',\r\n        },\r\n        '&& .MuiInput-root:hover::before': {\r\n            borderColor: '#FFFFFF',\r\n        },\r\n        '& .MuiInputLabel-root': {\r\n            color: '#0074B6',\r\n            marginLeft: '1%',\r\n            marginTop: '-1%'\r\n        },\r\n        '& .MuiInputLabel-shrink': {\r\n            color: '#0074B6',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nvar b = ['#E0E0E0', '#F7F8F8', '#F7F8F8'];      //offensive range colors\r\n\r\nclass TrainingData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: ['Unparliamentary Words', 'Culturally Sensitive', 'Politically Sensitive',],\r\n            Offensive: '',\r\n            text: '',\r\n            index: 0,\r\n            trData: [[], [], []],\r\n            textCount: [],\r\n            edData: [[], [], []],\r\n        }\r\n    }\r\n    componentWillUpdate() {\r\n        this.getData(1)\r\n    }\r\n\r\n    componentDidMount() {           //initial function\r\n        this.getData(0);\r\n    }\r\n\r\n    getData = (a) => {\r\n        axios.get(API.Add_Training)                                     //get all training data to display\r\n            .then(response => {\r\n                var data = response.data.payload\r\n                var trData = [[], [], []], edData = [[], [], []], textCount = [], c;\r\n                for (var i = 0; i < data.length; i++) {\r\n                    for (var catg = 0; catg < 3; catg++) {              //recurring through every training data\r\n                        if (data[i].category === this.state.category[catg]) {\r\n                            c = catg;                                   //category\r\n                        }\r\n                    }\r\n                    trData[c] = trData[c].concat([{\r\n                        'id': data[i].id,\r\n                        'text': data[i].text, 'offensive': data[i].offensive\r\n                    }])\r\n                }\r\n                for (let ct = 0; ct < 3; ct++) {\r\n                    textCount = textCount.concat(trData[ct].length)     //data count in each categories\r\n                }\r\n                if (!a) {                      //initial setup, all edit selection false, edit data = training data\r\n                    for (var k = 0; k < 3; k++) {\r\n                        for (var j = 0; j < trData[k].length; j++) {\r\n                            edData[k] = edData[k].concat([{\r\n                                'id': trData[k][j].id, 'edit': false,\r\n                                'text': trData[k][j].text, 'offensive': trData[k][j].offensive\r\n                            }]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    edData = this.state.edData;\r\n                    for (let index = 0; index < 3; index++) {                               //updating edit data\r\n                        let inx = 0;\r\n                        while (inx < edData[index].length && inx < trData[index].length) {\r\n                            if (trData[index][inx].id !== edData[index][inx].id) {          //comparing id\r\n                                edData[index].splice(inx, 1)                                //remove deleted data\r\n                            }\r\n                            if (!edData[index][inx].edit) {                                 //update non edit data\r\n                                edData[index][inx].text = trData[index][inx].text;\r\n                                edData[index][inx].offensive = trData[index][inx].offensive;\r\n                            }\r\n                            inx++;\r\n                        }\r\n                        edData[index].splice(trData[index].length)                          //remove deleted data at the end\r\n                        for (let ex = edData[index].length; ex < trData[index].length; ex++) {\r\n                            edData[index] = edData[index].concat([{                         //add new data\r\n                                'id': trData[index][ex].id, 'edit': false,\r\n                                'text': trData[index][ex].text, 'offensive': trData[index][ex].offensive\r\n                            }]);\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({ trData: trData, edData: edData, textCount: textCount })\r\n            });\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        console.log('submit')\r\n        axios.post(API.Save_TrainingData, JSON.stringify([{        //add training data API\r\n            \"text\": this.state.text,\r\n            \"category\": this.state.category[this.state.index],\r\n            \"offensive\": this.state.Offensive\r\n        }]),\r\n            { headers: { \"Content-Type\": \"application/json\" } })\r\n            .then(res => (res.data))\r\n            .then((data) => {\r\n                if (data.message !== 'success') {\r\n                    alert('error adding data')\r\n                }\r\n            })\r\n        axios.post(API.Add_Training, JSON.stringify({        //add training data mock API\r\n            \"text\": this.state.text,\r\n            \"offensive\": this.state.Offensive,\r\n            \"category\": this.state.category[this.state.index]\r\n        }),\r\n            {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            })\r\n        axios.post(API.Reload_TrainingData, JSON.stringify({//reload training data API\r\n            \"custom_profanity\": true,\r\n            \"model\": false\r\n        }),\r\n            {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            })\r\n        this.setState({ text: '', Offensive: '' })          //resetting handle change values\r\n\r\n    }\r\n\r\n    categorySelect = (index) => {                           //switching between categories\r\n        for (var j = 0; j < 3; j++) {                       //changing the background color of selected category\r\n            if (j === index) {\r\n                b[j] = '#E0E0E0';\r\n            } else {\r\n                b[j] = '#F7F8F8';\r\n            }\r\n        }\r\n        this.setState({\r\n            index: index\r\n        }, () => {\r\n            for (var i = 0; i < this.state.edData[index].length; i++) {  //setting the 'edit' hide and 'done' display a/c to the category\r\n                if (!this.state.edData[index][i].edit) {     //'edit' button not selected\r\n                    this.hide(i)\r\n                } else {                                    //'done' and cancel display\r\n                    this.display(i)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSelect = (event) => {                             //offensive range selecton - add new data\r\n        this.setState({ Offensive: event.target.value })\r\n    }\r\n\r\n    onHandleChange = (event) => {                           //handle text - add new data\r\n        this.setState({ text: event.target.value })         //input text value\r\n    }\r\n\r\n    display = (i) => {                                      //display the 'edit' on mouse over and display 'done' on select the edit\r\n        document.getElementById(this.state.index + \" edit \" + i).style.display = 'inline';\r\n    }\r\n\r\n    hide = (i) => {                                         //hide 'edit' button on mouse out\r\n        if (!this.state.edData[this.state.index][i].edit) {\r\n            document.getElementById(this.state.index + \" edit \" + i).style.display = 'none';\r\n        }\r\n    }\r\n\r\n    edit = (i) => {\r\n        if (this.state.edData[this.state.index][i].edit) {               //cheching whether 'done' button or not \r\n            // axios.post(API.Save_TrainingData, JSON.stringify([{     //edit training data\r\n            //     \"text\": this.state.edData[this.state.index][i].text,\r\n            //     \"category\": this.state.category[this.state.index]}),\r\n            //     \"offensive\": this.state.edData[this.state.index][i].offensive\r\n            // }]),\r\n            //     { headers: { \"Content-Type\": \"application/json\" } })\r\n            // axios.post(API.Reload_TrainingData, JSON.stringify({    //reload training data\r\n            //     \"custom_profanity\": true,\r\n            //     \"model\": false\r\n            // }),\r\n            //     {\r\n            //         headers: { \"Content-Type\": \"application/json\" }\r\n            //     })\r\n            this.setState({\r\n                trData: this.state.trData.map((catData, ix) => ix !== this.state.index ? catData :      //finding the category\r\n                    catData.map((data, indx) => indx !== i ? data : {\r\n                        ...data, text: this.state.edData[this.state.index][i].text,\r\n                        offensive: this.state.edData[this.state.index][i].offensive\r\n                    })),\r\n                edData: this.state.edData.map((catData, ix) => ix !== this.state.index ? catData :      //'edit' selection false\r\n                    catData.map((data, indx) => indx !== i ? data : { ...data, edit: false })),\r\n            })\r\n            document.getElementById(this.state.index + \" edit \" + i).style.display = 'none';            //hiding the 'edit' button\r\n        }\r\n        else {                                                                                          //'edit' selection\r\n            console.log('edit ' + this.state.trData[this.state.index][i].text);\r\n            this.setState({\r\n                edData: this.state.edData.map((catData, ix) => ix !== this.state.index ? catData :      //'edit' selection true\r\n                    catData.map((data, indx) => indx !== i ? data : { ...data, edit: true })),\r\n            })\r\n            document.getElementById(this.state.index + \" edit \" + i).style.display = 'inline';          //displaying the 'done' and cancel\r\n        }\r\n    }\r\n\r\n    noEditing = (i) => {\r\n        if (this.state.edData[this.state.index][i].edit) {  //return false for edit selected data\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onEditText = (i, event) => {                            //handle change - edit data\r\n        this.setState({\r\n            edData: this.state.edData.map((catData, ix) => ix !== this.state.index ? catData :\r\n                catData.map((data, indx) => indx !== i ? data : { ...data, text: event.target.value })),\r\n        })\r\n    }\r\n\r\n    editSelect = (i, event) => {                            //offensive range selection - edit data\r\n        this.setState({\r\n            edData: this.state.edData.map((catData, ix) => ix !== this.state.index ? catData :\r\n                catData.map((data, indx) => indx !== i ? data : { ...data, offensive: event.target.value })),\r\n        })\r\n    }\r\n\r\n    cancel = (i) => {                                       // cancel editing\r\n        console.log('Cancel edit ' + this.state.trData[this.state.index][i].text);\r\n        this.setState({                                     //edit false, edit data= training data\r\n            edData: this.state.edData.map((catData, ix) => ix !== this.state.index ? catData :\r\n                catData.map((data, indx) => indx !== i ? data : {\r\n                    ...data, edit: false, text: this.state.trData[this.state.index][i].text,\r\n                    offensive: this.state.trData[this.state.index][i].offensive\r\n                })),\r\n        })\r\n        document.getElementById(this.state.index + \" edit \" + i).style.display = 'none';        //hide 'edit' button\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;                     // with styles classes\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4 style={{ float: 'left', marginLeft: '4%', marginTop: '0.25%' }}>Categories</h4>\r\n                    <div style={{ width: '17%', float: 'left', marginTop: '3%', marginLeft: '-6.5%' }}>\r\n                        <List className={classes.root}>\r\n                            {this.state.category.map((listData, i) => (                         //mapping categories\r\n                                <ListItem onClick={() => this.categorySelect(i)}\r\n                                    style={{ height: 45, backgroundColor: b[i] }} key={i}>\r\n                                    <ListItemText key={i} primary={listData} />                 {/*listing categories*/}\r\n                                    <div key={i + 100} style={{\r\n                                        float: 'right', color: '#0074B6',\r\n                                        fontSize: '18px', flexDirection: 'column'\r\n                                    }}>\r\n                                        {this.state.textCount[i]}                               {/*displaying category text count */}\r\n                                    </div>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ marginLeft: '24%' }}>                                             {/*data section*/}\r\n                    <h4 style={{ marginTop: '3%', marginBottom: '1%' }}>Training Data</h4>\r\n                    <div style={{ marginBottom: '2%' }}>\r\n                        <form onSubmit={this.onSubmit}>                                         {/*add new data form*/}\r\n                            <TextField style={{ width: '49.8%', backgroundColor: 'white' }}     //input text\r\n                                className={classes.textField} variant='standard'\r\n                                label=\" + Add text to classify\"\r\n                                required InputLabelProps={{ required: false }}                  //required field, hide '*'\r\n                                value={this.state.text} onChange={this.onHandleChange} />\r\n                            <FormControl className={classes.textField}\r\n                                style={{ backgroundColor: 'white', width: '19.8%', marginLeft: '1%', marginTop: '0%' }}\r\n                                variant='standard' color='primary'>                             {/*offenive range selection*/}\r\n                                <InputLabel style={{ color: '#0074B6' }}>Select Offensive Range</InputLabel>\r\n                                <Select value={this.state.Offensive} onChange={this.handleSelect} required>\r\n                                    <MenuItem value={'Lightly Offensive'}>Lightly Offensive</MenuItem>\r\n                                    <MenuItem value={'Offensive'}>Offensive</MenuItem>\r\n                                    <MenuItem value={'Extremely Offensive'}>Extremely Offensive</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Button type='submit' variant=\"contained\" color='primary'           //Submit button\r\n                                style={{\r\n                                    border: 'none', width: '13%', height: 50,\r\n                                    textTransform: 'none', marginLeft: '1.3%'\r\n                                }}>\r\n                                Submit\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: '-1.5%' }}>                                        {/*edit data section*/}\r\n                        {this.state.edData[this.state.index].map((data, i) => (                 //mapping training data in the selected category\r\n                            <div key={i} onMouseOver={() => this.display(i)}\r\n                                onMouseOut={() => this.hide(i)}>                                {/*hiding and displaying of 'edit' button*/}\r\n                                <TextField variant=\"outlined\" disabled={this.noEditing(i)}      //disabling non editing text field\r\n                                    onChange={(e) => this.onEditText(i, e)}\r\n                                    value={this.state.edData[this.state.index][i].text}\r\n                                    required InputLabelProps={{ required: false }}\r\n                                    style={{ width: '50%', marginBottom: '0.5%', marginTop: '0%', backgroundColor: 'white' }} />\r\n                                <FormControl className={classes.formControl} variant='outlined'\r\n                                    style={{\r\n                                        width: '20%', marginBottom: '0.5%', marginLeft: '1%',\r\n                                        backgroundColor: 'white', marginTop: '-0%'\r\n                                    }}>           {/*offensive range selection*/}\r\n                                    <Select required disabled={this.noEditing(i)} onChange={(e) => this.editSelect(i, e)}\r\n                                        value={this.state.edData[this.state.index][i].offensive}>\r\n                                        <MenuItem value={'Lightly Offensive'}>Lightly Offensive</MenuItem>\r\n                                        <MenuItem value={'Offensive'}>Offensive</MenuItem>\r\n                                        <MenuItem value={'Extremely Offensive'}>Extremely Offensive</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <div id={this.state.index + \" edit \" + i} style={{ display: 'none' }}>    {/*'edit' or 'done' button'*/}\r\n                                    <Button variant={this.noEditing(i) ? 'outlined' : 'contained'} color='primary'\r\n                                        style={{\r\n                                            width: '13%', height: 55, textTransform: 'none',\r\n                                            marginLeft: '0.2%', marginBottom: '0.5%', marginTop: '0%'\r\n                                        }}\r\n                                        onClick={() => this.edit(i)}>\r\n                                        {this.noEditing(i) ? 'Edit' : 'Done'}                   {/*display 'edit' for non edit, else 'done'*/}\r\n                                    </Button>\r\n                                    {this.noEditing(i) ? null : <IconButton size='small'\r\n                                        onClick={() => this.cancel(i)} >                        {/*display cancel with 'done'*/}\r\n                                        <CancelIcon color='primary' fontSize='large'\r\n                                            style={{ marginLeft: '1%', marginBottom: '-1%', marginTop: '0%' }} />\r\n                                    </IconButton>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(TrainingData);","import React from 'react';\r\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types';\r\nimport './Style.css';\r\nimport Report from './Report'\r\nimport logo from './tarentologo.png';\r\nimport TrainingData from './TrainingData';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <div>{children}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#303055',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#303055',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#303055',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n\r\n    },\r\n    '&:focus': {\r\n      color: '#303055',\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: 0\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function TabSelect(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const theme = useTheme();\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ backgroundColor: 'white' }}>\r\n        <img alt='iGOT' src={logo} style={{ width: '6%', display: 'inline-flex', marginLeft: '5%', marginTop: '1%' }} />\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\" style={{ marginLeft: '12%', marginTop: '-3%' }}>\r\n          <AntTab label=\"Profanity Check\" {...a11yProps(0)} />    {/*first tab*/}\r\n          <AntTab label=\"Training Data\" {...a11yProps(1)} />      {/*second tab*/}\r\n        </AntTabs>\r\n      </div>\r\n\r\n      <div>\r\n        <Typography className={classes.padding} />\r\n        <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={value} onChangeIndex={handleChangeIndex}>\r\n\r\n          <TabPanel\r\n            // value={value} index={0} dir={theme.direction}> \r\n            hidden={value === 1}>        {/*displaying 1st tab by hiding 2nd tab*/}\r\n            <Report />                   {/*Check profanity and display result*/}\r\n          </TabPanel>\r\n\r\n          <TabPanel\r\n            // value={value} index={1} dir={theme.direction}> \r\n            hidden={value === 0}>        {/*displaying 2nd tab by hiding 1st tab*/}\r\n            <TrainingData />             {/*adda nd edit training data set (incomplete)*/}\r\n          </TabPanel>\r\n\r\n        </SwipeableViews>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport TabSelect from './Components/TabSelect';\n\nfunction App() {\n  return (\n    <div>\n      <TabSelect />\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}